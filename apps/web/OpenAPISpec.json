{
  "info": {
    "description": "This OpenAPI specification is automatically generated by Hasura.\n\nEndpoint \"timesheets\":\n- ⚠️ $.timesheets.working_duration: field 'working_duration' not found in object 'timesheets'\n- ⚠️ $.timesheets.working_unit: field 'working_unit' not found in object 'timesheets'\n\nEndpoint \"insert_timesheets_one\":\n- ⚠️ $.insert_timesheets_one.working_duration: field 'working_duration' not found in object 'timesheets'\n- ⚠️ $.insert_timesheets_one.working_unit: field 'working_unit' not found in object 'timesheets'\n\nEndpoint \"timesheets_by_pk\":\n- ⚠️ $.timesheets_by_pk.working_duration: field 'working_duration' not found in object 'timesheets'\n- ⚠️ $.timesheets_by_pk.working_unit: field 'working_unit' not found in object 'timesheets'\n\nEndpoint \"delete_timesheets_by_pk\":\n- ⚠️ $.delete_timesheets_by_pk.working_duration: field 'working_duration' not found in object 'timesheets'\n- ⚠️ $.delete_timesheets_by_pk.working_unit: field 'working_unit' not found in object 'timesheets'\n\nEndpoint \"update_timesheets_by_pk\":\n- ⚠️ $.update_timesheets_by_pk.working_duration: field 'working_duration' not found in object 'timesheets'\n- ⚠️ $.update_timesheets_by_pk.working_unit: field 'working_unit' not found in object 'timesheets'",
    "title": "Rest Endpoints",
    "version": ""
  },
  "paths": {
    "/api/rest/projects-tasks/project/{id}": {
      "get": {
        "summary": "projects_tasks_by_project_id",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery projects_tasks_by_project_id($id: uuid!) {\r\n  projects_tasks(where: {project_id: {_eq: $id}}) {\r\n    id\r\n    project_id\r\n    task_description\r\n    updated_at\r\n    date\r\n    created_at\r\n  }\r\n}\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "projects_tasks": {
                      "items": {
                        "description": "columns and relationships of \"projects_tasks\"",
                        "nullable": false,
                        "properties": {
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "date": {
                            "$ref": "#/components/schemas/timestamp"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "project_id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "task_description": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "projects_tasks",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/projects-tasks/project/{id}"
          }
        }
      }
    },
    "/api/rest/timesheets": {
      "get": {
        "summary": "timesheets",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery timesheets {\n  timesheets {\n    client_id\n    created_at\n    freelance_id\n    id\n    project_task_id\n    updated_at\n    working_date\n    working_duration\n    working_unit\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timesheets": {
                      "items": {
                        "description": "columns and relationships of \"timesheets\"",
                        "nullable": false,
                        "properties": {
                          "client_id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "freelance_id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "project_task_id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          },
                          "working_date": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          }
                        },
                        "title": "timesheets",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/timesheets"
          }
        }
      },
      "post": {
        "summary": "insert_timesheets_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_timesheets_one($object: timesheets_insert_input!) {\n  insert_timesheets_one(object: $object) {\n    client_id\n    created_at\n    freelance_id\n    id\n    project_task_id\n    updated_at\n    working_date\n    working_duration\n    working_unit\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/timesheets_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_timesheets_one": {
                      "description": "columns and relationships of \"timesheets\"",
                      "nullable": true,
                      "properties": {
                        "client_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "freelance_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_task_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "working_date": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "timesheets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/timesheets"
          }
        }
      }
    },
    "/api/rest/timesheets/{id}": {
      "get": {
        "summary": "timesheets_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery timesheets_by_pk($id: uuid!) {\n  timesheets_by_pk(id: $id) {\n    client_id\n    created_at\n    freelance_id\n    id\n    project_task_id\n    updated_at\n    working_date\n    working_duration\n    working_unit\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "timesheets_by_pk": {
                      "description": "columns and relationships of \"timesheets\"",
                      "nullable": true,
                      "properties": {
                        "client_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "freelance_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_task_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "working_date": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "timesheets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/timesheets/{id}"
          }
        }
      },
      "post": {
        "summary": "update_timesheets_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_timesheets_by_pk($id: uuid!, $object: timesheets_set_input!) {\n  update_timesheets_by_pk(pk_columns: {id: $id}, _set: $object) {\n    client_id\n    created_at\n    freelance_id\n    id\n    project_task_id\n    updated_at\n    working_date\n    working_duration\n    working_unit\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  },
                  "object": {
                    "$ref": "#/components/schemas/timesheets_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_timesheets_by_pk": {
                      "description": "columns and relationships of \"timesheets\"",
                      "nullable": true,
                      "properties": {
                        "client_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "freelance_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_task_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "working_date": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "timesheets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/timesheets/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_timesheets_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_timesheets_by_pk($id: uuid!) {\n  delete_timesheets_by_pk(id: $id) {\n    client_id\n    created_at\n    freelance_id\n    id\n    project_task_id\n    updated_at\n    working_date\n    working_duration\n    working_unit\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_timesheets_by_pk": {
                      "description": "columns and relationships of \"timesheets\"",
                      "nullable": true,
                      "properties": {
                        "client_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "freelance_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_task_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "working_date": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        }
                      },
                      "title": "timesheets",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/timesheets/{id}"
          }
        }
      }
    },
    "/api/rest/freelances": {
      "get": {
        "summary": "freelances",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery freelances {\n  freelances {\n    created_at\n    daily_rate\n    email\n    id\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "freelances": {
                      "items": {
                        "description": "columns and relationships of \"freelances\"",
                        "nullable": false,
                        "properties": {
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "daily_rate": {
                            "$ref": "#/components/schemas/numeric!"
                          },
                          "email": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "freelances",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/freelances"
          }
        }
      },
      "post": {
        "summary": "insert_freelances_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_freelances_one($object: freelances_insert_input!) {\n  insert_freelances_one(object: $object) {\n    created_at\n    daily_rate\n    email\n    id\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/freelances_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_freelances_one": {
                      "description": "columns and relationships of \"freelances\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "daily_rate": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "freelances",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/freelances"
          }
        }
      }
    },
    "/api/rest/freelances/{id}": {
      "get": {
        "summary": "freelances_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery freelances_by_pk($id: uuid!) {\n  freelances_by_pk(id: $id) {\n    created_at\n    daily_rate\n    email\n    id\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "freelances_by_pk": {
                      "description": "columns and relationships of \"freelances\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "daily_rate": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "freelances",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/freelances/{id}"
          }
        }
      },
      "post": {
        "summary": "update_freelances_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_freelances_by_pk($id: uuid!, $object: freelances_set_input!) {\n  update_freelances_by_pk(pk_columns: {id: $id}, _set: $object) {\n    created_at\n    daily_rate\n    email\n    id\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  },
                  "object": {
                    "$ref": "#/components/schemas/freelances_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_freelances_by_pk": {
                      "description": "columns and relationships of \"freelances\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "daily_rate": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "freelances",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/freelances/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_freelances_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_freelances_by_pk($id: uuid!) {\n  delete_freelances_by_pk(id: $id) {\n    created_at\n    daily_rate\n    email\n    id\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_freelances_by_pk": {
                      "description": "columns and relationships of \"freelances\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "daily_rate": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "email": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "freelances",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/freelances/{id}"
          }
        }
      }
    },
    "/api/rest/clients": {
      "get": {
        "summary": "clients",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery clients {\n  clients {\n    created_at\n    email\n    id\n    name\n    phone\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clients": {
                      "items": {
                        "description": "columns and relationships of \"clients\"",
                        "nullable": false,
                        "properties": {
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "email": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "phone": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "clients",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/clients"
          }
        }
      },
      "post": {
        "summary": "insert_clients_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_clients_one($object: clients_insert_input!) {\n  insert_clients_one(object: $object) {\n    created_at\n    email\n    id\n    name\n    phone\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/clients_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_clients_one": {
                      "description": "columns and relationships of \"clients\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "email": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "phone": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "clients",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/clients"
          }
        }
      }
    },
    "/api/rest/clients/{id}": {
      "get": {
        "summary": "clients_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery clients_by_pk($id: uuid!) {\n  clients_by_pk(id: $id) {\n    created_at\n    email\n    id\n    name\n    phone\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clients_by_pk": {
                      "description": "columns and relationships of \"clients\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "email": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "phone": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "clients",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/clients/{id}"
          }
        }
      },
      "post": {
        "summary": "update_clients_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_clients_by_pk($id: uuid!, $object: clients_set_input!) {\n  update_clients_by_pk(pk_columns: {id: $id}, _set: $object) {\n    created_at\n    email\n    id\n    name\n    phone\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  },
                  "object": {
                    "$ref": "#/components/schemas/clients_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_clients_by_pk": {
                      "description": "columns and relationships of \"clients\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "email": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "phone": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "clients",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/clients/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_clients_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_clients_by_pk($id: uuid!) {\n  delete_clients_by_pk(id: $id) {\n    created_at\n    email\n    id\n    name\n    phone\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_clients_by_pk": {
                      "description": "columns and relationships of \"clients\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "email": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "phone": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "clients",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/clients/{id}"
          }
        }
      }
    },
    "/api/rest/projects": {
      "get": {
        "summary": "projects",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery projects {\n  projects {\n    created_at\n    description\n    end_date\n    id\n    is_active\n    name\n    start_date\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "projects": {
                      "items": {
                        "description": "columns and relationships of \"projects\"",
                        "nullable": false,
                        "properties": {
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "description": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "end_date": {
                            "$ref": "#/components/schemas/timestamp"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "is_active": {
                            "nullable": false,
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "name": {
                            "nullable": false,
                            "title": "String",
                            "type": "string"
                          },
                          "start_date": {
                            "$ref": "#/components/schemas/timestamp"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "projects",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/projects"
          }
        }
      },
      "post": {
        "summary": "insert_projects_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_projects_one($object: projects_insert_input!) {\n  insert_projects_one(object: $object) {\n    created_at\n    description\n    end_date\n    id\n    is_active\n    name\n    start_date\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/projects_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_projects_one": {
                      "description": "columns and relationships of \"projects\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/projects"
          }
        }
      }
    },
    "/api/rest/projects/{id}": {
      "get": {
        "summary": "projects_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery projects_by_pk($id: uuid!) {\n  projects_by_pk(id: $id) {\n    created_at\n    description\n    end_date\n    id\n    is_active\n    name\n    start_date\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "projects_by_pk": {
                      "description": "columns and relationships of \"projects\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/projects/{id}"
          }
        }
      },
      "post": {
        "summary": "update_projects_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_projects_by_pk($id: uuid!, $object: projects_set_input!) {\n  update_projects_by_pk(pk_columns: {id: $id}, _set: $object) {\n    created_at\n    description\n    end_date\n    id\n    is_active\n    name\n    start_date\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  },
                  "object": {
                    "$ref": "#/components/schemas/projects_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_projects_by_pk": {
                      "description": "columns and relationships of \"projects\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/projects/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_projects_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_projects_by_pk($id: uuid!) {\n  delete_projects_by_pk(id: $id) {\n    created_at\n    description\n    end_date\n    id\n    is_active\n    name\n    start_date\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_projects_by_pk": {
                      "description": "columns and relationships of \"projects\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "end_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "is_active": {
                          "nullable": false,
                          "title": "Boolean",
                          "type": "boolean"
                        },
                        "name": {
                          "nullable": false,
                          "title": "String",
                          "type": "string"
                        },
                        "start_date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/projects/{id}"
          }
        }
      }
    },
    "/api/rest/projects_tasks": {
      "get": {
        "summary": "projects_tasks",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery projects_tasks {\n  projects_tasks {\n    created_at\n    date\n    hours_worked\n    id\n    project_id\n    task_description\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "projects_tasks": {
                      "items": {
                        "description": "columns and relationships of \"projects_tasks\"",
                        "nullable": false,
                        "properties": {
                          "created_at": {
                            "$ref": "#/components/schemas/timestamp!"
                          },
                          "date": {
                            "$ref": "#/components/schemas/timestamp"
                          },
                          "hours_worked": {
                            "$ref": "#/components/schemas/numeric!"
                          },
                          "id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "project_id": {
                            "$ref": "#/components/schemas/uuid!"
                          },
                          "task_description": {
                            "nullable": true,
                            "title": "String",
                            "type": "string"
                          },
                          "updated_at": {
                            "$ref": "#/components/schemas/timestamp"
                          }
                        },
                        "title": "projects_tasks",
                        "type": "object"
                      },
                      "nullable": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/projects_tasks"
          }
        }
      },
      "post": {
        "summary": "insert_projects_tasks_one",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation insert_projects_tasks_one($object: projects_tasks_insert_input!) {\n  insert_projects_tasks_one(object: $object) {\n    created_at\n    date\n    hours_worked\n    id\n    project_id\n    task_description\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/projects_tasks_insert_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_projects_tasks_one": {
                      "description": "columns and relationships of \"projects_tasks\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "hours_worked": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "task_description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects_tasks",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/projects_tasks"
          }
        }
      }
    },
    "/api/rest/projects_tasks/{id}": {
      "get": {
        "summary": "projects_tasks_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery projects_tasks_by_pk($id: uuid!) {\n  projects_tasks_by_pk(id: $id) {\n    created_at\n    date\n    hours_worked\n    id\n    project_id\n    task_description\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "projects_tasks_by_pk": {
                      "description": "columns and relationships of \"projects_tasks\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "hours_worked": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "task_description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects_tasks",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/projects_tasks/{id}"
          }
        }
      },
      "post": {
        "summary": "update_projects_tasks_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation update_projects_tasks_by_pk($id: uuid!, $object: projects_tasks_set_input!) {\n  update_projects_tasks_by_pk(pk_columns: {id: $id}, _set: $object) {\n    created_at\n    date\n    hours_worked\n    id\n    project_id\n    task_description\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  },
                  "object": {
                    "$ref": "#/components/schemas/projects_tasks_set_input!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "update_projects_tasks_by_pk": {
                      "description": "columns and relationships of \"projects_tasks\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "hours_worked": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "task_description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects_tasks",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/projects_tasks/{id}"
          }
        }
      },
      "delete": {
        "summary": "delete_projects_tasks_by_pk",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation delete_projects_tasks_by_pk($id: uuid!) {\n  delete_projects_tasks_by_pk(id: $id) {\n    created_at\n    date\n    hours_worked\n    id\n    project_id\n    task_description\n    updated_at\n  }\n}\n\n```",
        "parameters": [
          {
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request.",
            "in": "header",
            "name": "x-hasura-admin-secret",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "_\"id\" is required (enter it either in parameters or request body)_",
            "in": "path",
            "name": "id",
            "schema": {
              "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid!"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "delete_projects_tasks_by_pk": {
                      "description": "columns and relationships of \"projects_tasks\"",
                      "nullable": true,
                      "properties": {
                        "created_at": {
                          "$ref": "#/components/schemas/timestamp!"
                        },
                        "date": {
                          "$ref": "#/components/schemas/timestamp"
                        },
                        "hours_worked": {
                          "$ref": "#/components/schemas/numeric!"
                        },
                        "id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "project_id": {
                          "$ref": "#/components/schemas/uuid!"
                        },
                        "task_description": {
                          "nullable": true,
                          "title": "String",
                          "type": "string"
                        },
                        "updated_at": {
                          "$ref": "#/components/schemas/timestamp"
                        }
                      },
                      "title": "projects_tasks",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Responses for DELETE /api/rest/projects_tasks/{id}"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "uuid!": {
        "nullable": false,
        "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
        "title": "uuid",
        "type": "string"
      },
      "timestamp!": {
        "nullable": false,
        "title": "timestamp"
      },
      "timestamp": {
        "nullable": true,
        "title": "timestamp"
      },
      "uuid": {
        "nullable": true,
        "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}",
        "title": "uuid",
        "type": "string"
      },
      "jsonb": {
        "nullable": true,
        "title": "jsonb"
      },
      "timesheets_insert_input!": {
        "description": "input type for inserting data into table \"timesheets\"",
        "nullable": false,
        "properties": {
          "client_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "freelance_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "project_task_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "working_date": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "working_durations": {
            "$ref": "#/components/schemas/jsonb"
          }
        },
        "title": "timesheets_insert_input",
        "type": "object"
      },
      "timesheets_set_input!": {
        "description": "input type for updating data in table \"timesheets\"",
        "nullable": false,
        "properties": {
          "client_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "freelance_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "project_task_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "working_date": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "working_durations": {
            "$ref": "#/components/schemas/jsonb"
          }
        },
        "title": "timesheets_set_input",
        "type": "object"
      },
      "numeric!": {
        "nullable": false,
        "title": "numeric"
      },
      "numeric": {
        "nullable": true,
        "title": "numeric"
      },
      "freelances_insert_input!": {
        "description": "input type for inserting data into table \"freelances\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "daily_rate": {
            "$ref": "#/components/schemas/numeric"
          },
          "email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "freelances_insert_input",
        "type": "object"
      },
      "freelances_set_input!": {
        "description": "input type for updating data in table \"freelances\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "daily_rate": {
            "$ref": "#/components/schemas/numeric"
          },
          "email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "freelances_set_input",
        "type": "object"
      },
      "clients_insert_input!": {
        "description": "input type for inserting data into table \"clients\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "clients_insert_input",
        "type": "object"
      },
      "clients_set_input!": {
        "description": "input type for updating data in table \"clients\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "email": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "phone": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "clients_set_input",
        "type": "object"
      },
      "projects_insert_input!": {
        "description": "input type for inserting data into table \"projects\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "description": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "end_date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "start_date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "projects_insert_input",
        "type": "object"
      },
      "projects_set_input!": {
        "description": "input type for updating data in table \"projects\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "description": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "end_date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "is_active": {
            "nullable": true,
            "title": "Boolean",
            "type": "boolean"
          },
          "name": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "start_date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "projects_set_input",
        "type": "object"
      },
      "projects_tasks_insert_input!": {
        "description": "input type for inserting data into table \"projects_tasks\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "hours_worked": {
            "$ref": "#/components/schemas/numeric"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "project_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "task_description": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "projects_tasks_insert_input",
        "type": "object"
      },
      "projects_tasks_set_input!": {
        "description": "input type for updating data in table \"projects_tasks\"",
        "nullable": false,
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/timestamp"
          },
          "date": {
            "$ref": "#/components/schemas/timestamp"
          },
          "hours_worked": {
            "$ref": "#/components/schemas/numeric"
          },
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "project_id": {
            "$ref": "#/components/schemas/uuid"
          },
          "task_description": {
            "nullable": true,
            "title": "String",
            "type": "string"
          },
          "updated_at": {
            "$ref": "#/components/schemas/timestamp"
          }
        },
        "title": "projects_tasks_set_input",
        "type": "object"
      }
    }
  },
  "openapi": "3.0.0"
}